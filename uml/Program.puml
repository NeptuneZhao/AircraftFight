@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class node33 as ".gitignore"
class Bullet {
   getPower(): int
   Bullet(int, int, int, int, int):
   goForward(): void
}
class Flying {
   image: BufferedImage
   isFlying: boolean
   getX(): int
   getNotFlying(): boolean
   isCrash(Flying): boolean
   Flying(int, int, int, int):
   getImage(): BufferedImage
   goCrash(Flying): boolean
   Flying():
   setVanish(): void
   getSpeedX(): int
   goForward(): void
   setLocation(double, double): void
   getFlying(): boolean
   getSpeedY(): int
   getHeight(): int
   getY(): int
   getWidth(): int
}
class Game {
   score: int
   warplaneHero: WarplaneHero
   maxEnemies: int
   timeInterval: int
   cycleTime: int
   allEnemyBullets: List<Bullet>
   time: int
   gameOver: boolean
   heroBullets: List<Bullet>
   cycleDuration: int
   scheduler: ScheduledExecutorService
   backgroundTop: int
   allEnemies: List<Warplane>
   props: List<Prop>
   timeCycled(): boolean
   Loop(): void
   Game(int):
   crashEvent(): void
   PaintImageWithPositionRevised(Graphics, List<Flying>): void
   paint(Graphics): void
   StartGame(int, boolean): Game
   PaintScoreAndHealth(Graphics): void
}
class GameEasy
class GameHard
class GameNormal
class ImageManager {
   PropBombImg: BufferedImage
   PropBulletImg: BufferedImage
   BulletHeroImg: BufferedImage
   EliteImg: BufferedImage
   EnemyBulletImg: BufferedImage
   HeroBulletImg: BufferedImage
   BackgroundImg: BufferedImage
   PropHealthImg: BufferedImage
   BossImg: BufferedImage
   BulletEnemyImg: BufferedImage
   getImage(Object): BufferedImage
   getImage(String): BufferedImage
}
class MouseController
class MouseController {
   SetControl(Game, WarplaneHero): void
}
class Program {
   main(String[]): void
}
class node10 as "Program.puml"
class Prop {
   Prop(Warplane):
   takeEffect(WarplaneHero, List<Warplane>, List<Bullet>): void
   goForward(): void
}
class PropBomb {
   takeEffect(WarplaneHero, List<Warplane>, List<Bullet>): void
   PropBomb(Warplane):
}
class PropBullet {
   takeEffect(WarplaneHero, List<Warplane>, List<Bullet>): void
   PropBullet(Warplane):
}
class PropGenerator {
   GenerateProp(Warplane): Prop
}
class PropHealth {
   takeEffect(WarplaneHero, List<Warplane>, List<Bullet>): void
   PropHealth(Warplane):
}
class Record {
   difficulty: String
   time: String
   score: int
   userName: String
   getUserName(): String
   getDifficulty(): String
   getTime(): String
   getScore(): int
   Record(String, String, int, String):
}
class RecordExport {
   getAllRecords(): List<Record>
   deleteRecord(Record): void
   addRecord(Record): void
}
class RecordImplement {
   records: List<Record>
   f: File
   addRecord(Record): void
   getAllRecords(): List<Record>
   writeToFile(): void
   deleteRecord(Record): void
   RecordImplement():
}
class Warplane {
   Warplane(int, int, int, int, int):
   ChangeHealth(int): void
   getScore(): int
   getHealth(): int
}
class WarplaneBoss {
   getShots(): List<Bullet>
   getScore(): int
   WarplaneBoss(int, int, int, int, int):
   setVanish(): void
   goForward(): void
}
class WarplaneElite {
   setVanish(): void
   goForward(): void
   WarplaneElite(int, int, int, int, int):
   getShots(): List<Bullet>
   getScore(): int
}
class WarplaneEnemy {
   getScore(): int
   goForward(): void
   WarplaneEnemy(int, int, int, int, int):
   getShots(): List<Bullet>
   setVanish(): void
}
class WarplaneGenerator
class WarplaneHero {
   getScore(): int
   getShots(): List<Bullet>
   WarplaneHero(int, int, int, int, int):
   goForward(): void
}
class node32 as "build.gradle.kts"
class node19 as "copilot.data.migration.ask.xml"
class node0 as "copilot.data.migration.ask2agent.xml"
class node20 as "gradle-wrapper.jar"
class node22 as "gradle-wrapper.properties" {
   validateDistributionUrl:
   networkTimeout:
}
class node6 as "gradle.xml"
class gradlew
class node29 as "gradlew.bat"
class node7 as "misc.xml"
class node18 as "settings.gradle.kts"

GameEasy           ^-[#595959,plain]-  Game              : "removed"
GameHard           ^-[#595959,plain]-  Game              : "removed"
GameNormal         ^-[#595959,plain]-  Game              : "removed"
Prop               ^-[#595959,plain]-  Flying
PropBomb           ^-[#595959,plain]-  Prop
PropBullet         ^-[#595959,plain]-  Prop
PropHealth         ^-[#595959,plain]-  Prop
RecordImplement    ^-[#595959,dashed]-  RecordExport
WarplaneBoss       ^-[#595959,plain]-  Warplane
@enduml
